"use strict";const session={all:function(){return this._retrieve()},decrement:function(t,e=1){this.put(t,this.get(t,0)-e)},except:function(t){return this._retrieve(t,"except")},exists:function(t){return this.all().hasOwnProperty(t)},flush:function(){sessionStorage.clear()},forget:function(t){Array.isArray(t)?t.forEach((t=>sessionStorage.removeItem(t))):sessionStorage.removeItem(t)},get:function(t,e=null){return JSON.parse(sessionStorage.getItem(t))||e},has:function(t){return null!==this.get(t)},increment:function(t,e=1){this.put(t,this.get(t,0)+e)},missing:function(t){return!this.has(t)},only:function(t){return this._retrieve(t,"only")},pull:function(t,e=null){const s=this.get(t,e);return this.forget(t),s},push:function(t,e){const s=this.get(t);Array.isArray(s)&&(s.push(e),this.put(t,s))},put:function(t,e){sessionStorage.setItem(t,JSON.stringify(e))},_retrieve(t=null,e=null){let s={};for(let n=0;n<sessionStorage.length;n++){const r=sessionStorage.key(n);switch(e){case"only":t.includes(r)&&(s[r]=this.get(r));break;case"except":t.includes(r)||(s[r]=this.get(r));break;default:s[r]=this.get(r);break}}return s}};